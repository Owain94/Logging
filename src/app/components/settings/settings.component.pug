app-header([headerHeading]="['Settings', '']")

.section
  .row
    .large-12.columns.text-center
      h4 Current settings

  form([formGroup]="settingsForm",(ngSubmit)="submitForm(settingsForm.value)")
    .row
      .large-6.medium-12.columns
        label([ngClass]="{ 'error': isFieldValid('name') }") Name
          input(type="text", [formControl]="settingsForm.controls['name']", [ngClass]="{ 'error': isFieldValid('name') }")
        small.error(*ngIf="isFieldValid('name')") Name is mandatory

      .large-6.medium-12.columns
        label([ngClass]="{ 'error': isFieldValid('case') }") Case
          select([formControl]="settingsForm.controls['case']", [ngClass]="{ 'error': isFieldValid('case') }")
            option(*ngFor="let case of (cases | async)?.data; let i = index; trackBy: trackByFn", [value]="case._id", [innerText]="case.name + ' - ' + case.description")
        small.error(*ngIf="isFieldValid('case')") Case is mandatory

    .row
      .large-6.medium-12.columns
        label(for="location", [ngClass]="{ 'error': isFieldValid('location') }") Location
          input.input-group-field(type="text", [formControl]="settingsForm.controls['location']", [ngClass]="{ 'error': isFieldValid('location') }")
        small.error(*ngIf="isFieldValid('location')") Location is mandatory

      .large-6.medium-12.columns
        label(for="invpre", [ngClass]="{ 'error': isFieldValid('invpre') }") Reason prefix (example: memory forensics)
          input.input-group-field(type="text", [formControl]="settingsForm.controls['invpre']", [ngClass]="{ 'error': isFieldValid('invpre') }")
        small.error(*ngIf="isFieldValid('invpre')") Reason prefix is mandatory

    .row
      .large-2.columns.end
        button.button(type="submit") Save